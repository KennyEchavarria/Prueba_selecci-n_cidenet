/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hulk.store;

import javax.swing.JOptionPane;
//import javax.swing.JTable.;

/**
 *
 * @author kenny
 */
public class FormHulkStore extends javax.swing.JFrame {

    /** 
     * Creates new form FormHulkStore
     */
    double cantidad_camisetas_dc=580,cantidad_vasos_dc=398,cantidad_comics_dc=16000,cantidad_juguetes_dc=700,cantidad_accesorios_dc=10000;
    double cantidad_camisetas_marvel=720,cantidad_vasos_marvel=678,cantidad_comics_marvel=1879,cantidad_juguetes_marvel=987,cantidad_accesorios_marvel=765;
    double cantidad_camisetas_al=509,cantidad_vasos_al=345,cantidad_comics_al=1897,cantidad_juguetes_al=790,cantidad_accesorios_al=1897;
    public FormHulkStore() {
        initComponents();
        this.txtcamisetasdc.setText(String.valueOf(cantidad_camisetas_dc));
        this.txtvasosdc.setText(String.valueOf(cantidad_vasos_dc));
        this.txtcomicsdc.setText(String.valueOf(cantidad_comics_dc));
        this.txtjuguetesdc.setText(String.valueOf(cantidad_juguetes_dc));
        this.txtaccesoriosdc.setText(String.valueOf(cantidad_accesorios_dc));
        this.txtcamisetasmarvel.setText(String.valueOf(cantidad_camisetas_marvel));
        this.txtvasosmarvel.setText(String.valueOf(cantidad_vasos_marvel));
        this.txtcomicsmarvel.setText(String.valueOf(cantidad_comics_marvel));
        this.txtjuguetesmarvel.setText(String.valueOf(cantidad_juguetes_marvel));
        this.txtaccesoriosmarvel.setText(String.valueOf(cantidad_accesorios_marvel));
        this.txtcamisetasal.setText(String.valueOf(cantidad_camisetas_al));
        this.txtvasosal.setText(String.valueOf(cantidad_vasos_al));
        this.txtcomicsal.setText(String.valueOf(cantidad_comics_al));
        this.txtjuguetesal.setText(String.valueOf(cantidad_juguetes_al));
        this.txtaccesoriosal.setText(String.valueOf(cantidad_accesorios_al));
     
        
       // this.tabladetalles.setTable(modelo);
        //this.modelo.addColumn("MARCA");
        //this.modelo.addColumn("PRODUCTO");
        //this.modelo.addColumn("PRECIO");
        //this.modelo.addColumn("CANTIDAD");
        //this.modelo.addColumn("TOTAL");
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        txtcamisetasdc = new javax.swing.JTextField();
        txtvasosdc = new javax.swing.JTextField();
        txtcomicsdc = new javax.swing.JTextField();
        txtjuguetesdc = new javax.swing.JTextField();
        txtvasosmarvel = new javax.swing.JTextField();
        txtcamisetasmarvel = new javax.swing.JTextField();
        txtcomicsmarvel = new javax.swing.JTextField();
        txtjuguetesmarvel = new javax.swing.JTextField();
        txtaccesoriosmarvel = new javax.swing.JTextField();
        txtcamisetasal = new javax.swing.JTextField();
        txtvasosal = new javax.swing.JTextField();
        txtcomicsal = new javax.swing.JTextField();
        txtjuguetesal = new javax.swing.JTextField();
        txtaccesoriosal = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        txtaccesoriosdc = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        cb1marca = new javax.swing.JComboBox<>();
        jLabel21 = new javax.swing.JLabel();
        cb1producto = new javax.swing.JComboBox<>();
        jLabel22 = new javax.swing.JLabel();
        txtprecio = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txt1cantidad = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        txttotal = new javax.swing.JTextField();
        btnlimpiar = new javax.swing.JButton();
        btncompra = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        cb2marca = new javax.swing.JComboBox<>();
        jLabel26 = new javax.swing.JLabel();
        cb2producto = new javax.swing.JComboBox<>();
        jLabel27 = new javax.swing.JLabel();
        txt2cantidad = new javax.swing.JTextField();
        btnactualizar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Hulk Store");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Productos y detalles de Stock"));

        jLabel2.setText("DC Comics");

        jLabel3.setText("Camisetas");

        jLabel4.setText("Vasos");

        jLabel5.setText("Comics");

        jLabel6.setText("Juguetes");

        jLabel7.setText("Accesorios");

        jLabel8.setText("Marvel");

        jLabel9.setText("Camisetas");

        jLabel10.setText("Vasos");

        jLabel11.setText("Comics");

        jLabel12.setText("Juguetes");

        jLabel13.setText("Accesorios");

        jLabel14.setText("Alternativo");

        jLabel15.setText("Camisetas");

        jLabel16.setText("Vasos");

        jLabel17.setText("Comics");

        jLabel18.setText("Juguetes");

        jLabel19.setText("Accesorios");

        jLabel28.setText("Cantidad");

        txtcamisetasdc.setEditable(false);

        txtvasosdc.setEditable(false);
        txtvasosdc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtvasosdcActionPerformed(evt);
            }
        });

        txtcomicsdc.setEditable(false);

        txtjuguetesdc.setEditable(false);
        txtjuguetesdc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtjuguetesdcActionPerformed(evt);
            }
        });

        txtvasosmarvel.setEditable(false);

        txtcamisetasmarvel.setEditable(false);

        txtcomicsmarvel.setEditable(false);

        txtjuguetesmarvel.setEditable(false);
        txtjuguetesmarvel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtjuguetesmarvelActionPerformed(evt);
            }
        });

        txtaccesoriosmarvel.setEditable(false);

        txtcamisetasal.setEditable(false);

        txtvasosal.setEditable(false);
        txtvasosal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtvasosalActionPerformed(evt);
            }
        });

        txtcomicsal.setEditable(false);

        txtjuguetesal.setEditable(false);

        txtaccesoriosal.setEditable(false);

        jLabel29.setText("Cantidad");

        jLabel30.setText("Cantidad");

        txtaccesoriosdc.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel3)
                                .addComponent(jLabel5)
                                .addComponent(jLabel7))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel6))
                            .addComponent(jLabel2))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel28)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtvasosdc)
                                .addComponent(txtcamisetasdc, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                                .addComponent(txtjuguetesdc)
                                .addComponent(txtcomicsdc, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                                .addComponent(txtaccesoriosdc)))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(jLabel8))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING))))))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtcamisetasmarvel, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtvasosmarvel, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtcomicsmarvel, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtjuguetesmarvel, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtaccesoriosmarvel, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel18)
                                .addComponent(jLabel17)
                                .addComponent(jLabel16))
                            .addComponent(jLabel19))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel30)
                            .addComponent(txtcomicsal, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtvasosal, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtcamisetasal, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtjuguetesal, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtaccesoriosal, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel29)
                        .addGap(58, 58, 58)
                        .addComponent(jLabel14))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel28)
                            .addComponent(jLabel8)
                            .addComponent(jLabel29)
                            .addComponent(jLabel14)
                            .addComponent(jLabel30))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtcamisetasdc, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(txtcamisetasmarvel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)
                            .addComponent(txtcamisetasal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(txtvasosdc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtvasosmarvel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel10)
                                        .addComponent(txtvasosal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel16))
                                    .addComponent(jLabel4))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtcomicsdc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(txtcomicsmarvel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel17)
                        .addComponent(txtcomicsal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtjuguetesal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtjuguetesmarvel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel12)
                        .addComponent(jLabel18)
                        .addComponent(txtjuguetesdc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtaccesoriosmarvel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13)
                        .addComponent(txtaccesoriosal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel19))
                    .addComponent(txtaccesoriosdc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Realizar compra"));

        jLabel20.setText("Marca:");

        cb1marca.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione..", "DC Comics", "Marvel", "Alternativo" }));

        jLabel21.setText("Producto:");

        cb1producto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione...", "Camisetas", "Vasos", "Comics", "Juguetes", "Accesorios" }));

        jLabel22.setText("Precio:");

        txtprecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtprecioActionPerformed(evt);
            }
        });

        jLabel23.setText("Cantidad:");

        jLabel24.setText("Total:");

        txttotal.setEditable(false);

        btnlimpiar.setText("Limpiar");
        btnlimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlimpiarActionPerformed(evt);
            }
        });

        btncompra.setText("Generar compra");
        btncompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncompraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cb1marca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnlimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtprecio))))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21)
                            .addComponent(jLabel23)
                            .addComponent(jLabel24, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cb1producto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt1cantidad)
                            .addComponent(txttotal)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btncompra)
                        .addGap(34, 34, 34))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(cb1marca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21)
                    .addComponent(cb1producto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtprecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel23)
                        .addComponent(jLabel22))
                    .addComponent(txt1cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(txttotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnlimpiar)
                    .addComponent(btncompra)))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Actualización de stock"));

        jLabel25.setText("Marca:");

        cb2marca.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione..", "DC Comics", "Marvel", "Alternativo" }));

        jLabel26.setText("Producto:");

        cb2producto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione..", "Camisetas", "Vasos", "Comics", "Juguetes", "Accesorios" }));

        jLabel27.setText("Cantidad:");

        btnactualizar.setText("Actualizar stock");
        btnactualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnactualizarActionPerformed(evt);
            }
        });

        jButton1.setText("Limpiar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel27)
                    .addComponent(jLabel25))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addComponent(btnactualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(txt2cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(cb2marca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cb2producto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(cb2marca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26)
                    .addComponent(cb2producto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(txt2cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnactualizar)
                    .addComponent(jButton1)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(343, 343, 343)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
//DefaultTableModel modelo = new DefaultTableModel();
    private void txtprecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtprecioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtprecioActionPerformed

    private void btncompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncompraActionPerformed
        // TODO add your handling code here:
        compra_dc_comics();
        compra_marvel();
        compra_alternativo();
        
        /*if(cb1marca.getSelectedIndex()==1){
            this.modelo.AddRow(new Object[]{"DC Comics",this.cb1producto.getSelectedIndex(),this.txtprecio.getText(),
                this.txt1cantidad.getText(),this,txttotal.getText()});
        }
        else if(cb1marca.getSelectedIndex()==2){
            this.modelo.AddRow(new Object[]{"Marvel",this.cb1producto.getSelectedIndex(),this.txtprecio.getText(),
                this.txt1cantidad.getText(),this,txttotal.getText()});
        }
        else if(cb1marca.getSelectedIndex()==3){
            this.modelo.AddRow(new Object[]{"Alternativo",this.cb1producto.getSelectedIndex(),this.txtprecio.getText(),
                this.txt1cantidad.getText(),this,txttotal.getText()});
        }*/     
        
    }//GEN-LAST:event_btncompraActionPerformed

    private void btnlimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlimpiarActionPerformed
        // TODO add your handling code here:
        this.cb1marca.setSelectedIndex(0);
        this.cb1producto.setSelectedIndex(0);
        this.txtprecio.setText("");
        this.txt1cantidad.setText("");
        this.txttotal.setText("");
    }//GEN-LAST:event_btnlimpiarActionPerformed

    private void txtvasosdcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtvasosdcActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtvasosdcActionPerformed

    private void txtvasosalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtvasosalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtvasosalActionPerformed

    private void txtjuguetesdcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtjuguetesdcActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtjuguetesdcActionPerformed

    private void txtjuguetesmarvelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtjuguetesmarvelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtjuguetesmarvelActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.cb2marca.setSelectedIndex(0);
        this.cb2producto.setSelectedIndex(0);
        this.txt2cantidad.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnactualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnactualizarActionPerformed
        // TODO add your handling code here:
        stock_dc_comics();
        stock_marvel();
        stock_alternativo();
    }//GEN-LAST:event_btnactualizarActionPerformed
    public void compra_dc_comics(){
        double cantidad;
        double precio;
        double total;
        
        if(cb1marca.getSelectedIndex()==1){ //compra de camistea dc comics
            if(this.cb1producto.getSelectedIndex()==1){
                cantidad=Double.parseDouble(this.txt1cantidad.getText());
                precio=Double.parseDouble(this.txtprecio.getText());
                total=(cantidad)*(precio);
                this.txttotal.setText(String.valueOf(total));
                if(cantidad <= cantidad_camisetas_dc){
                    cantidad_camisetas_dc=cantidad_camisetas_dc-cantidad;
                    this.txtcamisetasdc.setText(String.valueOf(cantidad_camisetas_dc));
                }
                else if(cantidad > cantidad_camisetas_dc){
                    JOptionPane.showMessageDialog(null,"No hay suficientes unidades de este producto.");
                }
            }
        
        }
        if(cb1marca.getSelectedIndex()==1){ //compra de vasos dc comics
            if(this.cb1producto.getSelectedIndex()==2){
                cantidad=Double.parseDouble(this.txt1cantidad.getText());
                precio=Double.parseDouble(this.txtprecio.getText());
                total=(cantidad)*(precio);
                this.txttotal.setText(String.valueOf(total));
                if(cantidad <= cantidad_vasos_dc){
                    cantidad_vasos_dc=cantidad_vasos_dc-cantidad;
                    this.txtvasosdc.setText(String.valueOf(cantidad_vasos_dc));
                }
                else if(cantidad > cantidad_vasos_dc){
                    JOptionPane.showMessageDialog(null,"No hay suficientes unidades de este producto.");
                }
            }
        }
        if(cb1marca.getSelectedIndex()==1){ //compra de comics dc comics
            if(this.cb1producto.getSelectedIndex()==3){
                cantidad=Double.parseDouble(this.txt1cantidad.getText());
                precio=Double.parseDouble(this.txtprecio.getText());
                total=(cantidad)*(precio);
                this.txttotal.setText(String.valueOf(total));
                if(cantidad <= cantidad_comics_dc){
                    cantidad_comics_dc=cantidad_comics_dc-cantidad;
                    this.txtcomicsdc.setText(String.valueOf(cantidad_comics_dc));
                }
                else if(cantidad > cantidad_comics_dc){
                    JOptionPane.showMessageDialog(null,"No hay suficientes unidades de este producto.");
                }
            }
        }
        if(cb1marca.getSelectedIndex()==1){ //compra de juguetes dc comics
            if(this.cb1producto.getSelectedIndex()==4){
                cantidad=Double.parseDouble(this.txt1cantidad.getText());
                precio=Double.parseDouble(this.txtprecio.getText());
                total=(cantidad)*(precio);
                this.txttotal.setText(String.valueOf(total));
                if(cantidad <= cantidad_juguetes_dc){
                    cantidad_juguetes_dc=cantidad_juguetes_dc-cantidad;
                    this.txtjuguetesdc.setText(String.valueOf(cantidad_juguetes_dc));
                }
                else if(cantidad > cantidad_juguetes_dc){
                    JOptionPane.showMessageDialog(null,"No hay suficientes unidades de este producto.");
                }
            }
        }
        if(cb1marca.getSelectedIndex()==1){ //compra de accesorios dc comics
            if(this.cb1producto.getSelectedIndex()==5){
                cantidad=Double.parseDouble(this.txt1cantidad.getText());
                precio=Double.parseDouble(this.txtprecio.getText());
                total=(cantidad)*(precio);
                this.txttotal.setText(String.valueOf(total));
                if(cantidad <= cantidad_accesorios_dc){
                    cantidad_accesorios_dc=cantidad_accesorios_dc-cantidad;
                    this.txtaccesoriosdc.setText(String.valueOf(cantidad_accesorios_dc));
                }
                else if(cantidad > cantidad_accesorios_dc){
                    JOptionPane.showMessageDialog(null,"No hay suficientes unidades de este producto.");
                }
            }
        }
    }
    public void compra_marvel(){
        double cantidad;//cantidad_vasos,cantidad_comics,cantidad_juguetes,cantidad_accesorios;
        double precio;
        double total;
        
        if(cb1marca.getSelectedIndex()==2){ //compra de camisetas marvel
            if(this.cb1producto.getSelectedIndex()==1){
                cantidad=Double.parseDouble(this.txt1cantidad.getText());
                precio=Double.parseDouble(this.txtprecio.getText());
                total=(cantidad)*(precio);
                this.txttotal.setText(String.valueOf(total));
                if(cantidad <= cantidad_camisetas_marvel){
                    cantidad_camisetas_marvel=cantidad_camisetas_marvel-cantidad;
                    this.txtcamisetasmarvel.setText(String.valueOf(cantidad_camisetas_marvel));
                }
                else if(cantidad > cantidad_camisetas_marvel){
                    JOptionPane.showMessageDialog(null,"No hay suficientes unidades de este producto.");
                }
            }
        }
        if(cb1marca.getSelectedIndex()==2){ //compra de vasos marvel
            if(this.cb1producto.getSelectedIndex()==2){
                cantidad=Double.parseDouble(this.txt1cantidad.getText());
                precio=Double.parseDouble(this.txtprecio.getText());
                total=(cantidad)*(precio);
                this.txttotal.setText(String.valueOf(total));
                if(cantidad <= cantidad_vasos_marvel){
                    cantidad_vasos_marvel=cantidad_vasos_marvel-cantidad;
                    this.txtvasosmarvel.setText(String.valueOf(cantidad_vasos_marvel));
                }
                else if(cantidad > cantidad_vasos_marvel){
                    JOptionPane.showMessageDialog(null,"No hay suficientes unidades de este producto.");
                }
                    
            }
        }
        if(cb1marca.getSelectedIndex()==2){ //compra de comics marvel
            if(this.cb1producto.getSelectedIndex()==3){
                precio=Double.parseDouble(this.txtprecio.getText());
                cantidad=Double.parseDouble(this.txt1cantidad.getText());
                total=(cantidad)*(precio);
                this.txttotal.setText(String.valueOf(total));
                if(cantidad <= cantidad_comics_marvel){
                    cantidad_comics_marvel=cantidad_comics_marvel-cantidad;
                    this.txtcomicsmarvel.setText(String.valueOf(cantidad_comics_marvel));
                }
                else if(cantidad > cantidad_comics_marvel){
                    JOptionPane.showMessageDialog(null,"No hay suficientes unidades de este producto.");
                }
            }
        }
        if(cb1marca.getSelectedIndex()==2){ //compra de juguetes marvel
            if(this.cb1producto.getSelectedIndex()==4){
                cantidad=Double.parseDouble(this.txt1cantidad.getText());
                precio=Double.parseDouble(this.txtprecio.getText());
                total=(cantidad)*(precio);
                this.txttotal.setText(String.valueOf(total));
                if(cantidad <= cantidad_juguetes_marvel){
                    cantidad_juguetes_marvel=cantidad_juguetes_marvel-cantidad;
                    this.txtjuguetesmarvel.setText(String.valueOf(cantidad_juguetes_marvel));
                }
                else if(cantidad > cantidad_juguetes_marvel){
                    JOptionPane.showMessageDialog(null,"No hay suficientes unidades de este producto.");
                }
            }
        }
        if(cb1marca.getSelectedIndex()==2){ //compra de accesorios marvel
            if(this.cb1producto.getSelectedIndex()==5){
                cantidad=Double.parseDouble(this.txt1cantidad.getText());
                precio=Double.parseDouble(this.txtprecio.getText());
                total=(cantidad)*(precio);
                this.txttotal.setText(String.valueOf(total));
                if(cantidad <= cantidad_accesorios_marvel){
                    cantidad_accesorios_marvel=cantidad_accesorios_marvel-cantidad;
                    this.txtaccesoriosmarvel.setText(String.valueOf(cantidad_accesorios_marvel));
                 }
                else if(cantidad > cantidad_accesorios_marvel){
                    JOptionPane.showMessageDialog(null,"No hay suficientes unidades de este producto.");
                }
            }
        }
    }
    public void compra_alternativo(){
        double cantidad;
        double precio;
        double total;
        
        if(cb1marca.getSelectedIndex()==3){ //compra de camisetas alternativo
            if(this.cb1producto.getSelectedIndex()==1){
                cantidad=Double.parseDouble(this.txt1cantidad.getText());
                precio=Double.parseDouble(this.txtprecio.getText());
                total=(cantidad)*(precio);
                this.txttotal.setText(String.valueOf(total));
                if(cantidad <= cantidad_camisetas_al){
                    cantidad_camisetas_al=cantidad_camisetas_al-cantidad;
                    this.txtcamisetasal.setText(String.valueOf(cantidad_camisetas_al));
                }
                else if(cantidad > cantidad_camisetas_al){
                    JOptionPane.showMessageDialog(null,"No hay suficientes unidades de este producto.");
                }
            }
        }
        if(cb1marca.getSelectedIndex()==3){ //compra de vasos alternativo
            if(this.cb1producto.getSelectedIndex()==2){
                cantidad=Double.parseDouble(this.txt1cantidad.getText());
                precio=Double.parseDouble(this.txtprecio.getText());
                total=(cantidad)*(precio);
                this.txttotal.setText(String.valueOf(total));
                if(cantidad <= cantidad_vasos_al){
                    cantidad_vasos_al=cantidad_vasos_al-cantidad;
                    this.txtvasosal.setText(String.valueOf(cantidad_vasos_al));
                }
                else if(cantidad > cantidad_vasos_al){
                    JOptionPane.showMessageDialog(null,"No hay suficientes unidades de este producto.");
                }
                    
            }
        }
        if(cb1marca.getSelectedIndex()==3){ //compra de comics alternativo
            if(this.cb1producto.getSelectedIndex()==3){
                cantidad=Double.parseDouble(this.txt1cantidad.getText());
                precio=Double.parseDouble(this.txtprecio.getText());
                total=(cantidad)*(precio);
                this.txttotal.setText(String.valueOf(total));
                if(cantidad <= cantidad_comics_al){
                    cantidad_comics_al=cantidad_comics_al-cantidad;
                    this.txtcomicsal.setText(String.valueOf(cantidad_comics_al));
                }
                else if(cantidad > cantidad_comics_al){
                    JOptionPane.showMessageDialog(null,"No hay suficientes unidades de este producto.");
                }
            }
        }
        if(cb1marca.getSelectedIndex()==3){ //compra de juguetes alternativo
            if(this.cb1producto.getSelectedIndex()==4){
                cantidad=Double.parseDouble(this.txt1cantidad.getText());
                precio=Double.parseDouble(this.txtprecio.getText());
                total=(cantidad)*(precio);
                this.txttotal.setText(String.valueOf(total));
                if(cantidad <= cantidad_juguetes_al){
                    cantidad_juguetes_al=cantidad_juguetes_al-cantidad;
                    this.txtjuguetesal.setText(String.valueOf(cantidad_juguetes_al));
                }
                else if(cantidad > cantidad_juguetes_al){
                    JOptionPane.showMessageDialog(null,"No hay suficientes unidades de este producto.");
                }
            }
        }
        if(cb1marca.getSelectedIndex()==3){ //compra de accesorios alternativo
            if(this.cb1producto.getSelectedIndex()==5 ){
                cantidad=Double.parseDouble(this.txt1cantidad.getText());
                precio=Double.parseDouble(this.txtprecio.getText());
                total=(cantidad)*(precio);
                this.txttotal.setText(String.valueOf(total));
                if(cantidad <= cantidad_accesorios_al){
                    cantidad_accesorios_al=cantidad_accesorios_al-cantidad;
                    this.txtaccesoriosal.setText(String.valueOf(cantidad_accesorios_al));
                }
                else if(cantidad > cantidad_accesorios_al){
                    JOptionPane.showMessageDialog(null,"No hay suficientes unidades de este producto.");
                }
            }
        }
    }
    public void stock_dc_comics(){
        double cantidad;
        
        if(cb2marca.getSelectedIndex()==1){ //actualizar stock de camisetas dc comics
            if(this.cb2producto.getSelectedIndex()==1 ){
                cantidad=Double.parseDouble(this.txt2cantidad.getText());
                cantidad_camisetas_dc=cantidad_camisetas_dc+cantidad;
                this.txtcamisetasdc.setText(String.valueOf(cantidad_camisetas_dc));
            }
        }
        if(cb2marca.getSelectedIndex()==1){ //actualizar stock de vasos dc comics
            if(this.cb2producto.getSelectedIndex()==2 ){
                cantidad=Double.parseDouble(this.txt2cantidad.getText());
                cantidad_vasos_dc=cantidad_vasos_dc+cantidad;
                this.txtvasosdc.setText(String.valueOf(cantidad_vasos_dc));
            }
        }
        if(cb2marca.getSelectedIndex()==1){ //actualizar stock de comics dc comics
            if(this.cb2producto.getSelectedIndex()==3 ){
                cantidad=Double.parseDouble(this.txt2cantidad.getText());
                cantidad_comics_dc=cantidad_comics_dc+cantidad;
                this.txtcomicsdc.setText(String.valueOf(cantidad_comics_dc));
            }
        }
        if(cb2marca.getSelectedIndex()==1){ //actualizar stock de juguetes dc comics
            if(this.cb2producto.getSelectedIndex()==4 ){
                cantidad=Double.parseDouble(this.txt2cantidad.getText());
                cantidad_juguetes_dc=cantidad_juguetes_dc+cantidad;
                this.txtjuguetesdc.setText(String.valueOf(cantidad_juguetes_dc));
            }
        }
        if(cb2marca.getSelectedIndex()==1){ //actualizar stock de accesorios dc comics
            if(this.cb2producto.getSelectedIndex()==5 ){
                cantidad=Double.parseDouble(this.txt2cantidad.getText());
                cantidad_accesorios_dc=cantidad_accesorios_dc+cantidad;
                this.txtaccesoriosdc.setText(String.valueOf(cantidad_accesorios_dc));
            }
        }
    }
    public void stock_marvel(){
        double cantidad;
        
        if(cb2marca.getSelectedIndex()==2){ //actualizar stock de camisetas marvel
            if(this.cb2producto.getSelectedIndex()==1 ){
                cantidad=Double.parseDouble(this.txt2cantidad.getText());
                cantidad_camisetas_marvel=cantidad_camisetas_marvel+cantidad;
                this.txtcamisetasmarvel.setText(String.valueOf(cantidad_camisetas_marvel));
            }
        }
        if(cb2marca.getSelectedIndex()==2){ //actualizar stock de vasos  marvel
            if(this.cb2producto.getSelectedIndex()==2 ){
                cantidad=Double.parseDouble(this.txt2cantidad.getText());
                cantidad_vasos_marvel=cantidad_vasos_marvel+cantidad;
                this.txtvasosmarvel.setText(String.valueOf(cantidad_vasos_marvel));
            }
        }
        if(cb2marca.getSelectedIndex()==2){ //actualizar stock de comics marvel
            if(this.cb2producto.getSelectedIndex()==3 ){
                cantidad=Double.parseDouble(this.txt2cantidad.getText());
                cantidad_comics_marvel=cantidad_comics_marvel+cantidad;
                this.txtcomicsmarvel.setText(String.valueOf(cantidad_comics_marvel));
            }
        }
        if(cb2marca.getSelectedIndex()==2){ //actualizar stock de juguetes dc comics
            if(this.cb2producto.getSelectedIndex()==4 ){
                cantidad=Double.parseDouble(this.txt2cantidad.getText());
                cantidad_juguetes_marvel=cantidad_juguetes_marvel+cantidad;
                this.txtjuguetesmarvel.setText(String.valueOf(cantidad_juguetes_marvel));
            }
        }
        if(cb2marca.getSelectedIndex()==2){ //actualizar stock de accesorios dc comics
            if(this.cb2producto.getSelectedIndex()==5 ){
                cantidad=Double.parseDouble(this.txt2cantidad.getText());
                cantidad_accesorios_marvel=cantidad_accesorios_marvel+cantidad;
                this.txtaccesoriosmarvel.setText(String.valueOf(cantidad_accesorios_marvel));
            }
        }
    }
    public void stock_alternativo(){
        double cantidad;
        
        if(cb2marca.getSelectedIndex()==3){ //actualizar stock de camisetas alternativo
            if(this.cb2producto.getSelectedIndex()==1 ){
                cantidad=Double.parseDouble(this.txt2cantidad.getText());
                cantidad_camisetas_al=cantidad_camisetas_al+cantidad;
                this.txtcamisetasal.setText(String.valueOf(cantidad_camisetas_al));
            }
        }
        if(cb2marca.getSelectedIndex()==3){ //actualizar stock de alternativo  marvel
            if(this.cb2producto.getSelectedIndex()==2 ){
                cantidad=Double.parseDouble(this.txt2cantidad.getText());
                cantidad_vasos_al=cantidad_vasos_al+cantidad;
                this.txtvasosal.setText(String.valueOf(cantidad_vasos_al));
            }
        }
        if(cb2marca.getSelectedIndex()==3){ //actualizar stock de comics alternativo
            if(this.cb2producto.getSelectedIndex()==3 ){
                cantidad=Double.parseDouble(this.txt2cantidad.getText());
                cantidad_comics_al=cantidad_comics_al+cantidad;
                this.txtcomicsal.setText(String.valueOf(cantidad_comics_al));
            }
        }
        if(cb2marca.getSelectedIndex()==3){ //actualizar stock de juguetes alternativo
            if(this.cb2producto.getSelectedIndex()==4 ){
                cantidad=Double.parseDouble(this.txt2cantidad.getText());
                cantidad_juguetes_al=cantidad_juguetes_al+cantidad;
                this.txtjuguetesal.setText(String.valueOf(cantidad_juguetes_al));
            }
        }
        if(cb2marca.getSelectedIndex()==3){ //actualizar stock de accesorios alternativo
            if(this.cb2producto.getSelectedIndex()==5 ){
                cantidad=Double.parseDouble(this.txt2cantidad.getText());
                cantidad_accesorios_al=cantidad_accesorios_al+cantidad;
                this.txtaccesoriosal.setText(String.valueOf(cantidad_accesorios_al));
            }
        }
    }
    
        
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormHulkStore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormHulkStore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormHulkStore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormHulkStore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormHulkStore().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnactualizar;
    private javax.swing.JButton btncompra;
    private javax.swing.JButton btnlimpiar;
    private javax.swing.JComboBox<String> cb1marca;
    private javax.swing.JComboBox<String> cb1producto;
    private javax.swing.JComboBox<String> cb2marca;
    private javax.swing.JComboBox<String> cb2producto;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField txt1cantidad;
    private javax.swing.JTextField txt2cantidad;
    private javax.swing.JTextField txtaccesoriosal;
    private javax.swing.JTextField txtaccesoriosdc;
    private javax.swing.JTextField txtaccesoriosmarvel;
    private javax.swing.JTextField txtcamisetasal;
    private javax.swing.JTextField txtcamisetasdc;
    private javax.swing.JTextField txtcamisetasmarvel;
    private javax.swing.JTextField txtcomicsal;
    private javax.swing.JTextField txtcomicsdc;
    private javax.swing.JTextField txtcomicsmarvel;
    private javax.swing.JTextField txtjuguetesal;
    private javax.swing.JTextField txtjuguetesdc;
    private javax.swing.JTextField txtjuguetesmarvel;
    private javax.swing.JTextField txtprecio;
    private javax.swing.JTextField txttotal;
    private javax.swing.JTextField txtvasosal;
    private javax.swing.JTextField txtvasosdc;
    private javax.swing.JTextField txtvasosmarvel;
    // End of variables declaration//GEN-END:variables
} 
